// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StockMarketChart.Entities;

namespace StockMarketChart.Migrations
{
    [DbContext(typeof(StockMarketDBContext))]
    [Migration("20211115123405_migrt2")]
    partial class migrt2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StockMarketChart.Entities.Company", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(5)
                        .HasColumnType("Char(5)");

                    b.Property<string>("brief")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ceo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("company_name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("sector")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("stock_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("turnover")
                        .HasColumnType("real");

                    b.HasKey("id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("StockMarketChart.Entities.IPODetails", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("company_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyid")
                        .HasColumnType("Char(5)");

                    b.Property<DateTime>("open_datetime")
                        .HasColumnType("datetime2");

                    b.Property<long>("price_p_share")
                        .HasColumnType("bigint");

                    b.Property<string>("stock_ex_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("total_shares")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("companyid");

                    b.ToTable("IPODetails");
                });

            modelBuilder.Entity("StockMarketChart.Entities.Sector", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(5)
                        .HasColumnType("Char(5)");

                    b.Property<string>("brief")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("sector_name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.ToTable("Sectors");
                });

            modelBuilder.Entity("StockMarketChart.Entities.StockExchange", b =>
                {
                    b.Property<string>("id")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Remarks")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("brief")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("contact_address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("stock_exchange_name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.ToTable("StockExchanges");
                });

            modelBuilder.Entity("StockMarketChart.Entities.StockPrice", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("company_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("companyid")
                        .HasColumnType("Char(5)");

                    b.Property<long>("current_price")
                        .HasColumnType("bigint");

                    b.Property<string>("stock_ex_code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("timestamp")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2");

                    b.HasKey("id");

                    b.HasIndex("companyid");

                    b.ToTable("StockPrices");
                });

            modelBuilder.Entity("StockMarketChart.Entities.User", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("confirmed")
                        .HasColumnType("bit");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("mobile")
                        .HasColumnType("bigint");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("userType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("StockMarketChart.Entities.IPODetails", b =>
                {
                    b.HasOne("StockMarketChart.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyid");

                    b.Navigation("company");
                });

            modelBuilder.Entity("StockMarketChart.Entities.StockPrice", b =>
                {
                    b.HasOne("StockMarketChart.Entities.Company", "company")
                        .WithMany()
                        .HasForeignKey("companyid");

                    b.Navigation("company");
                });
#pragma warning restore 612, 618
        }
    }
}
